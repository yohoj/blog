{"meta":{"title":"Yohoj","subtitle":"平时开发问题记录，以及一些分享","description":"Yohoj 的开源前端博客","author":"yohoj","url":"http://yohoj.github.io/blog","root":"/blog/"},"pages":[{"title":"关于本人","date":"2024-04-14T09:18:20.274Z","updated":"2024-04-14T09:18:20.274Z","comments":true,"path":"about.html","permalink":"http://yohoj.github.io/blog/about.html","excerpt":"","text":"自我介绍"},{"title":"文章归档","date":"2024-04-14T09:18:20.278Z","updated":"2024-04-14T09:18:20.278Z","comments":true,"path":"archive.html","permalink":"http://yohoj.github.io/blog/archive.html","excerpt":"","text":""},{"title":"我的朋友","date":"2024-04-14T09:18:20.278Z","updated":"2024-04-14T09:18:20.278Z","comments":true,"path":"friends.html","permalink":"http://yohoj.github.io/blog/friends.html","excerpt":"","text":"我的朋友"}],"posts":[{"title":"cloudflare tunnels status down","slug":"tunnels断开连接","date":"2024-04-14T07:22:34.000Z","updated":"2024-04-14T09:18:20.274Z","comments":true,"path":"2024/04/14/f93627ab2407/","link":"","permalink":"http://yohoj.github.io/blog/2024/04/14/f93627ab2407/","excerpt":"","text":"查看错误日志 1&#x27;ERR Failed to create new quic connection error=&quot;failed to dial to edge with quic: timeout: no recent network activity&quot;&#x27; 网上搜索发现是cloudflare使用了quic协议，需要切换到http2协议将docker的启动命令修改如下： 1tunnel --no-autoupdate run --protocol http2 --token [token] 使用http2进行连接后发现还是存在问题，错误日志如下： 123456789101112024-04-13T14:08:37Z ERR Unable to establish connection with Cloudflare edge error=&quot;TLS handshake with edge error: read tcp 172.17.0.5:35708-&gt;198.41.192.27:7844: i/o timeout&quot; connIndex=1 event=0 ip=198.41.192.272024-04-13T14:08:37Z ERR Serve tunnel error error=&quot;TLS handshake with edge error: read tcp 172.17.0.5:35708-&gt;198.41.192.27:7844: i/o timeout&quot; connIndex=1 event=0 ip=198.41.192.272024-04-13T14:08:37Z ERR Unable to establish connection with Cloudflare edge error=&quot;TLS handshake with edge error: read tcp 172.17.0.5:48800-&gt;198.41.192.77:7844: i/o timeout&quot; connIndex=2 event=0 ip=198.41.192.772024-04-13T14:08:37Z INF Retrying connection in up to 1m4s connIndex=1 event=0 ip=198.41.192.272024-04-13T14:08:37Z ERR Unable to establish connection with Cloudflare edge error=&quot;TLS handshake with edge error: read tcp 172.17.0.5:34444-&gt;198.41.200.193:7844: i/o timeout&quot; connIndex=0 event=0 ip=198.41.200.1932024-04-13T14:08:37Z ERR Serve tunnel error error=&quot;TLS handshake with edge error: read tcp 172.17.0.5:48800-&gt;198.41.192.77:7844: i/o timeout&quot; connIndex=2 event=0 ip=198.41.192.772024-04-13T14:08:37Z INF Retrying connection in up to 1m4s connIndex=2 event=0 ip=198.41.192.772024-04-13T14:08:37Z ERR Serve tunnel error error=&quot;TLS handshake with edge error: read tcp 172.17.0.5:34444-&gt;198.41.200.193:7844: i/o timeout&quot; connIndex=0 event=0 ip=198.41.200.1932024-04-13T14:08:37Z INF Retrying connection in up to 1m4s connIndex=0 event=0 ip=198.41.200.1932024-04-13T14:08:43Z ERR Connection terminated error=&quot;TLS handshake with edge error: read tcp 172.17.0.5:48800-&gt;198.41.192.77:7844: i/o timeout&quot; connIndex=22024-04-13T14:08:47Z ERR Connection terminated error=&quot;TLS handshake with edge error: read tcp 172.17.0.5:34444-&gt;198.41.200.193:7844: i/o timeout&quot; connIndex=02024-04-13T14:08:55Z ERR Connection terminated error=&quot;TLS handshake with edge error: read tcp 172.17.0.5:35708-&gt;198.41.192.27:7844: i/o timeout&quot; connIndex=1 从日志来看，网络连不上。怀疑被墙了，ping了一下对应的ip地址也能ping通，通过open clash日志也能看到是走的代理。但是一直连不上试了下将这个docker的访问全部走直连，居然成功连上了。","categories":[],"tags":[]},{"title":"electron问题记录","slug":"electron问题记录","date":"2023-06-07T15:13:49.000Z","updated":"2024-04-14T09:18:20.274Z","comments":true,"path":"2023/06/07/ef7166a59d04/","link":"","permalink":"http://yohoj.github.io/blog/2023/06/07/ef7166a59d04/","excerpt":"","text":"调用dll错误 DLL引用的路径错误，检查下DLL的路径是否正确 1Uncaught Error: Dynamic Linking Error: Win32 error 126 DLL位数不对,根据系统来确定使用x86还是x64,可通过os进行判断引入相应的DLL 1Uncaught Error: Dynamic Linking Error: Win32 error 193&lt;br&gt; DLL没有对应的函数 1Uncaught Error: Dynamic Linking Error: Win32 error 127 可以使用VS 2017的开发人员命令提示符，然后到dll目录下，运行 1dumpbin /exports mylib.dll 接入steam sdk问题gameoverlayui 无法调用, 在主进程js文件中加入 12// 解决steam overlay无效的问题app.commandLine.appendSwitch(&#x27;--in-process-gpu&#x27;) 接入wegame sdk问题打开一直白屏，需要在主进程js文件中加入 1app.commandLine.appendSwitch(&#x27;--no-sandbox&#x27;); 调用alert后，input输入框无法聚焦解决方法：重写alert在preload.js中增加如下代码 1234const &#123; ipcRenderer &#125; = require(&#x27;electron&#x27;)window.alert = (str) =&gt; &#123; ipcRenderer.send(&quot;alert&quot;, str);&#125; main.js 123456789101112const &#123; ipcMain, dialog &#125; = require(&#x27;electron&#x27;);ipcMain.on(&quot;alert&quot;, (e, str) =&gt; &#123; var options = &#123; type: &#x27;warning&#x27;, buttons: [&quot;Ok&quot;], defaultId: 0, cancelId:0, detail:str, message: &#x27;&#x27; &#125; dialog.showMessageBoxSync(options)&#125;);","categories":[{"name":"electron","slug":"electron","permalink":"http://yohoj.github.io/blog/categories/electron/"}],"tags":[]},{"title":"gitlab cli与runner使用","slug":"cli与runner使用","date":"2023-04-13T13:37:53.000Z","updated":"2024-04-14T09:18:20.274Z","comments":true,"path":"2023/04/13/a16e475c883c/","link":"","permalink":"http://yohoj.github.io/blog/2023/04/13/a16e475c883c/","excerpt":"","text":"设置仓库首先，在代码仓库根目录下创建.gitlab-ci.yml文件，该文件用于定义CI&#x2F;CD流程。下面是一个示例文件： 12345678stages: - buildjob1: stage: build script: - make build - make dependencies 这个文件定义了一个build阶段和一个job1作业。在job1中，我们运行了两个脚本：make build和make dependencies。这些脚本将在build阶段中执行。 安装GitLab Runner Windows 10安装GitLab Runner步骤： 从GitLab下载安装包。 以管理员身份打开PowerShell，并进入安装包所在目录。 运行以下命令安装GitLab Runner： 1./gitlab-runner-windows-amd64.exe install -user $&#123;username&#125; --password $&#123;password&#125; 如果使用的是本地账户，则可以省略–user 和 –password参数。 安装完成后，运行以下命令启动GitLab Runner： 1./gitlab-runner-windows-amd64.exe start 运行以下命令注册GitLab Runner： 1./gitlab-runner-windows-amd64.exe register 注册过程中，需要提供一个Runner名称、GitLab实例的URL、注册Token以及运行环境（在这里输入shell）。 注册完成后，GitLab Runner将生成一个config.toml文件。如果您没有安装PowerShell 7，则需要将shell&#x3D;”pwsh”改为shell&#x3D;”powershell”。 至此成功安装和配置了GitLab Runner。","categories":[{"name":"gitlab","slug":"gitlab","permalink":"http://yohoj.github.io/blog/categories/gitlab/"},{"name":"runner","slug":"gitlab/runner","permalink":"http://yohoj.github.io/blog/categories/gitlab/runner/"},{"name":"cli","slug":"gitlab/runner/cli","permalink":"http://yohoj.github.io/blog/categories/gitlab/runner/cli/"}],"tags":[]},{"title":"electron 配置说明","slug":"electron","date":"2023-04-07T14:53:27.000Z","updated":"2024-04-14T09:18:20.274Z","comments":true,"path":"2023/04/07/d37767fccf0e/","link":"","permalink":"http://yohoj.github.io/blog/2023/04/07/d37767fccf0e/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&#123; &quot;name&quot;: &quot;installFile&quot;,//安装目录 &quot;version&quot;: &quot;1.0.0&quot;,//版本号 &quot;description&quot;: &quot;&quot;, &quot;main&quot;: &quot;bin/main.js&quot;, &quot;scripts&quot;: &#123; &quot;start&quot;: &quot;tsc -p ./ &amp;&amp; electron ./bin/main.js&quot;, &quot;dist&quot;: &quot;tsc -p ./ &amp;&amp; electron-builder&quot;, &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot; &#125;, &quot;build&quot;: &#123; &quot;appId&quot;: &quot;com.test.app&quot;,//appid &quot;copyright&quot;: &quot;Copyright © 2023 yohoj&quot;, &quot;productName&quot;: &quot;appName&quot;,//安装包名称 &quot;asar&quot;: true, //是否使用asar加密 &quot;files&quot;: [ &quot;./bin/**/*&quot; ],//打包目录 &quot;extraResources&quot;: [ &quot;./bin/res/**&quot; ],//额外资源 &quot;compression&quot;: &quot;maximum&quot;,//压缩级别 “store” | “normal” | “maximum” | “undefined” &quot;directories&quot;: &#123; &quot;output&quot;: &quot;dist&quot;//输出目录 &#125;, &quot;publish&quot;: [//自动更新地址 &#123; &quot;provider&quot;: &quot;generic&quot;, &quot;url&quot;: &quot;http://10.225.136.154/electron/update/static/official&quot; &#125; ], &quot;nsis&quot;: &#123; &quot;oneClick&quot;: false,//是否一键安装 &quot;allowToChangeInstallationDirectory&quot;: true,//允许改变安装目录ß &quot;createDesktopShortcut&quot;: &quot;always&quot;,//创建桌面快捷方式 &quot;createStartMenuShortcut&quot;: true,//创建开始目录 &quot;language&quot;: &quot;2052&quot;//语言 &#125;, &quot;mac&quot;: &#123; &quot;category&quot;: &quot;your.app.category.type&quot; &#125;, &quot;win&quot;: &#123; &quot;icon&quot;: &quot;bin/res/logo/logo.ico&quot;,//安装包图标 &quot;target&quot;: [ &quot;nsis&quot; ] &#125; &#125;&#125;","categories":[{"name":"electron","slug":"electron","permalink":"http://yohoj.github.io/blog/categories/electron/"}],"tags":[]}],"categories":[{"name":"electron","slug":"electron","permalink":"http://yohoj.github.io/blog/categories/electron/"},{"name":"gitlab","slug":"gitlab","permalink":"http://yohoj.github.io/blog/categories/gitlab/"},{"name":"runner","slug":"gitlab/runner","permalink":"http://yohoj.github.io/blog/categories/gitlab/runner/"},{"name":"cli","slug":"gitlab/runner/cli","permalink":"http://yohoj.github.io/blog/categories/gitlab/runner/cli/"}],"tags":[]}